name: Build and release

on:
  release:
      types: [created]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build_application:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: '3.13'

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install setuptools setuptools_scm build

            - name: Build package
              run: python -m build

            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: dist-files
                path: dist/
            
            - name: Upload Release Asset
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                files: dist-files.zip


    build_and_push_docker_image:
        needs: build_application
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            attestations: write
            id-token: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to container registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.6.1
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push
              id: push
              uses: docker/build-push-action@v3
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
                subject-digest: ${{ steps.push.outputs.digest }}
                push-to-registry: true